program: struct* function*

struct: "struct" IDENTIFIER "{" struct_body "}"
struct_body: struct_field*
struct_field: var_with_type ";"

function: "fn" IDENTIFIER "(" fn_args ")" ("->" TYPE)? with_block? "{" function_body "}"
fn_args: var_with_type? ("," var_with_type)*
with_block: "with" var_with_type ("," var_with_type)*
function_body: statement*

var_with_type: IDENTIFIER ":" TYPE

statement: if | ifelse | while | simple_stmt
if: "if" expression "{" statement* "}"
ifelse: "if" expression "{" statement* "}" else "{" statement "}"
while: "while" expression "{" statement* "}"
simple_stat: assignment | expression ";"
assignment: IDENTIFIER "=" expression

expression: funcexpr | strexpr | atomexpr
funcexpr: IDENTIFIER "(" expression? ("," expression)* ")"
strexpr: expression "." IDENTIFIER
atomexpr: IDENTIFIER | INT_LITERAL | FLOAT_LITERAL | STRING_LITERAL | BOOL_LITERAL
